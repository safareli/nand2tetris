// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    Mux(a = load, b = false, sel = reset, out = loadR);
    Mux(a = inc, b = false,  sel = reset, out = incR);
    Mux(a = inc, b = false,  sel = loadR, out = incRL);

    Inc16(in = nextOut,                                   out = inInc);
    Mux16(a = false,            b = inInc,  sel = incRL,    out = outInced);
    
    Mux16(a = outInced,         b = false,  sel = reset,  out = outIncedReseted);
    Mux16(a = outIncedReseted,  b = in,     sel = loadR,   out = outIncedResetedLoaded);
    
    Or8Way(in[0] = reset, in[1] = loadR, in[2] = incRL, out = need2Set);
    Register( in = outIncedResetedLoaded, load = need2Set, out = out, out=nextOut);
}
